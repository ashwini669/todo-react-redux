{"ast":null,"code":"import { ADD_TODO, DELETE_TODO, UPDATE_TODO } from './actions';\nimport { todos } from './states';\nexport let keyVal;\nexport let reducer = (state = todos, action) => {\n  let newTodos;\n\n  switch (action.type) {\n    case ADD_TODO:\n      // newTodos=[...state];\n      // newTodos.push(action.payload)\n      let tasks = localStorage.getItem(\"todo_table\");\n\n      if (tasks == null) {\n        var todo = [];\n      } else {\n        todo = JSON.parse(tasks);\n      }\n\n      todo.map(item => {\n        if (item.Key !== action.payload.id) {\n          todo.push({\n            'Task': action.payload.name,\n            'Key': action.payload.id\n          });\n          localStorage.setItem(\"todo_table\", JSON.stringify(todo));\n        }\n\n        if (item.Key === action.payload.id) {\n          item.Task;\n        }\n      });\n      return todo;\n      break;\n\n    case DELETE_TODO:\n      // newTodos=[...state];\n      // newTodos=newTodos.filter(todo=> todo.id !== action.payload);\n      var todo = [];\n\n      if (localStorage.getItem('todo_table') === null) {\n        todo = [];\n      } else {\n        todo = JSON.parse(localStorage.getItem('todo_table'));\n      }\n\n      todo = todo.filter(function (todo, index) {\n        return todo.Key !== action.payload;\n      });\n      localStorage.setItem('todo_table', JSON.stringify(todo));\n      return todo;\n      break;\n\n    case UPDATE_TODO:\n      var data = [];\n\n      if (localStorage.getItem('todo_table') === null) {\n        data = [];\n      } else {\n        data = JSON.parse(localStorage.getItem('todo_table'));\n      }\n\n      data.map(item => {\n        if (item.Key === action.payload.Key) {\n          document.getElementById('demo').value = action.payload.Task;\n          keyVal = item.Key;\n        }\n      });\n      return data;\n      break;\n\n    default:\n      return state;\n  }\n}; // export default keyVal;","map":{"version":3,"sources":["/home/ashwini/Music/todo-redux/src/redux/reducer.js"],"names":["ADD_TODO","DELETE_TODO","UPDATE_TODO","todos","keyVal","reducer","state","action","newTodos","type","tasks","localStorage","getItem","todo","JSON","parse","map","item","Key","payload","id","push","name","setItem","stringify","Task","filter","index","data","document","getElementById","value"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,WAAhC,QAAkD,WAAlD;AACA,SAAQC,KAAR,QAAoB,UAApB;AAEA,OAAO,IAAIC,MAAJ;AACP,OAAO,IAAIC,OAAO,GAAC,CAACC,KAAK,GAACH,KAAP,EAAaI,MAAb,KAAwB;AACvC,MAAIC,QAAJ;;AAEA,UAAOD,MAAM,CAACE,IAAd;AAEI,SAAKT,QAAL;AAAgB;AACA;AAEA,UAAIU,KAAK,GAACC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAV;;AACA,UAAGF,KAAK,IAAE,IAAV,EACA;AACE,YAAIG,IAAI,GAAC,EAAT;AACA,OAHF,MAII;AACCA,QAAAA,IAAI,GAACC,IAAI,CAACC,KAAL,CAAWL,KAAX,CAAL;AACA;;AAEDG,MAAAA,IAAI,CAACG,GAAL,CAASC,IAAI,IAAG;AACZ,YAAGA,IAAI,CAACC,GAAL,KAAWX,MAAM,CAACY,OAAP,CAAeC,EAA7B,EACA;AACIP,UAAAA,IAAI,CAACQ,IAAL,CAAU;AAAC,oBAAOd,MAAM,CAACY,OAAP,CAAeG,IAAvB;AAA4B,mBAAMf,MAAM,CAACY,OAAP,CAAeC;AAAjD,WAAV;AACAT,UAAAA,YAAY,CAACY,OAAb,CAAqB,YAArB,EAAkCT,IAAI,CAACU,SAAL,CAAeX,IAAf,CAAlC;AACH;;AACD,YAAGI,IAAI,CAACC,GAAL,KAAWX,MAAM,CAACY,OAAP,CAAeC,EAA7B,EACA;AACIH,UAAAA,IAAI,CAACQ,IAAL;AACH;AAEJ,OAXD;AAYJ,aAAOZ,IAAP;AACA;;AAEhB,SAAKZ,WAAL;AACgB;AACA;AAEA,UAAIY,IAAI,GAAC,EAAT;;AACA,UAAGF,YAAY,CAACC,OAAb,CAAqB,YAArB,MAAqC,IAAxC,EAA6C;AACzCC,QAAAA,IAAI,GAAC,EAAL;AACH,OAFD,MAEM;AACFA,QAAAA,IAAI,GAAEC,IAAI,CAACC,KAAL,CAAWJ,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAX,CAAN;AACH;;AACDC,MAAAA,IAAI,GAAEA,IAAI,CAACa,MAAL,CAAY,UAASb,IAAT,EAAcc,KAAd,EAAqB;AACnC,eAAOd,IAAI,CAACK,GAAL,KAAWX,MAAM,CAACY,OAAzB;AACD,OAFG,CAAN;AAGAR,MAAAA,YAAY,CAACY,OAAb,CAAqB,YAArB,EAAkCT,IAAI,CAACU,SAAL,CAAeX,IAAf,CAAlC;AAEA,aAAOA,IAAP;AACA;;AAEhB,SAAKX,WAAL;AACgB,UAAI0B,IAAI,GAAC,EAAT;;AACA,UAAGjB,YAAY,CAACC,OAAb,CAAqB,YAArB,MAAqC,IAAxC,EAA6C;AACzCgB,QAAAA,IAAI,GAAC,EAAL;AACH,OAFD,MAEM;AACFA,QAAAA,IAAI,GAAEd,IAAI,CAACC,KAAL,CAAWJ,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAX,CAAN;AACH;;AACDgB,MAAAA,IAAI,CAACZ,GAAL,CAASC,IAAI,IAAG;AACZ,YAAGA,IAAI,CAACC,GAAL,KAAaX,MAAM,CAACY,OAAP,CAAeD,GAA/B,EACA;AACEW,UAAAA,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCC,KAAhC,GAAsCxB,MAAM,CAACY,OAAP,CAAeM,IAArD;AACArB,UAAAA,MAAM,GAACa,IAAI,CAACC,GAAZ;AACD;AACF,OANH;AASA,aAAOU,IAAP;AACA;;AAEhB;AACS,aAAOtB,KAAP;AAnEb;AAqEH,CAxEM,C,CA0EP","sourcesContent":["import { ADD_TODO, DELETE_TODO, UPDATE_TODO} from './actions';\nimport {todos} from './states'\n\nexport let keyVal;\nexport let reducer=(state=todos,action) => {\n    let newTodos;\n    \n    switch(action.type)\n    {  \n        case ADD_TODO:  // newTodos=[...state];\n                        // newTodos.push(action.payload)\n\n                        let tasks=localStorage.getItem(\"todo_table\");\n                        if(tasks==null)\n                        {\n                          var todo=[];\n                         }\n                        else{\n                             todo=JSON.parse(tasks);\n                            }\n\n                            todo.map(item =>{\n                                if(item.Key!==action.payload.id)\n                                {\n                                    todo.push({'Task':action.payload.name,'Key':action.payload.id});\n                                    localStorage.setItem(\"todo_table\",JSON.stringify(todo));\n                                }\n                                if(item.Key===action.payload.id)\n                                {\n                                    item.Task\n                                }\n\n                            });\n                        return todo;\n                        break;\n\n        case DELETE_TODO:\n                        // newTodos=[...state];\n                        // newTodos=newTodos.filter(todo=> todo.id !== action.payload);\n\n                        var todo=[];\n                        if(localStorage.getItem('todo_table')===null){\n                            todo=[];\n                        } else{\n                            todo= JSON.parse(localStorage.getItem('todo_table'));\n                        }\n                        todo= todo.filter(function(todo,index) {\n                            return todo.Key!==action.payload\n                          });\n                        localStorage.setItem('todo_table',JSON.stringify(todo));\n\n                        return todo;\n                        break; \n\n        case UPDATE_TODO:\n                        var data=[];\n                        if(localStorage.getItem('todo_table')===null){\n                            data=[];\n                        } else{\n                            data= JSON.parse(localStorage.getItem('todo_table'));\n                        }\n                        data.map(item =>{\n                            if(item.Key === action.payload.Key)\n                            {\n                              document.getElementById('demo').value=action.payload.Task;\n                              keyVal=item.Key;\n                            }\n                          })\n\n\n                        return data;\n                        break;  \n                \n        default:\n                 return state;\n    }\n}\n\n// export default keyVal;"]},"metadata":{},"sourceType":"module"}